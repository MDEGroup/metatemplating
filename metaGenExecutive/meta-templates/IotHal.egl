[%import "../epsilon/utility.eol";
import "../epsilon/metaEngine.eol";%]
[*
	Meta Template for Generic Adapter Generator
*]
[%=insStat('import "../epsilon/utility.eol";')%]
[%=insComment('\n\tTemplate for Specific Adapter Generator\n')%]

[*-Protocols libraries*]
[%=insMarker('Protocols libraries')%]
[%for (comm in EEnum.all.getWanted(_source, "comm_modes")) { %]
	[%for (proto in comm.eLiterals.getWanted(_source, "proto")) { %]
#include "[%=proto.getExtraInfo("proto")%].h"
	[%}%]
	
[%}%]

[*-Static code*]
[%=insMarker('Static code')%]
// Static code - Pin access Interface

void writeAnalog(int pin, int value);
int readAnalog(int pin);
void writeDigital(int pin, bool value);
bool readDigital(int pin);

// ***

[*-Reading Adapters*]
[%for (mc in EClass.all.getWanted(_source, "in_adapter")) {%]
[%=insMarker('Adapter for ' + mc.name)%]
[%=insFor('c', mc.name)%]

	[%for (mc_name in mc.getAllAttributes().getWanted(_source, "naming")) { %]
/* Reading Adapter - [%=insPh('c.' + mc_name.name)%] */
class [%=insPh('c.' + mc_name.name)%]Adapter {
	public:
		[*-Fields*]
		[%=insMarker('Fields')%]
		[%for (coding in mc.getAllAttributes().getWanted(_source, "coding")) { %]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "raw")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('field', 'port.'+pin.name)%]
						[%for (pin_typing in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "type")) { %]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "int")) { %]							
					[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		int [%=insPh('field.' + p_name.name)%];
								[%}%]
					[%=insEnd()%]							
							[%}%]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "bool")) { %]							
					[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		bool [%=insPh('field.' + p_name.name)%];
								[%}%]
					[%=insEnd()%]
							[%}%]
						[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "parallel")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
						[%for (p_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		bool [%=insPh('port.' + p_name.name)%][[%=insPh('port.' + pin.name + '.size()')%]];
						[%}%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "proto")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]				
			[%=insFor('port', 'c.' + port.name)%]
		[%=c_type.getExtraInfo("proto")%]* [%=insPh('port.' + port_name.name)%];
						[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
				[%=insFor('pin', 'port.' + pin.name)%]
							[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]							
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		const int [%=insPh('port.' + port_name.name)%]_[%=insPh('pin.' + p_name.name)%] = [%=insPh('pin.' + pin_id.name)%];
								[%}%]
							[%}%]
						[%}%]
				[%=insEnd()%]
					[%}%]
			[%=insEnd()%]
				[%}%]
		[%=insEnd()%]
			[%}%]
		[%}%]
		
		
	void run() {
		[*-Reading*]
		[%=insMarker('Reading')%]
		[%for (coding in mc.getAllAttributes().getWanted(_source, "coding")) { %]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "raw")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
			[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
				[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('field', 'port.'+pin.name)%]
					[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]
						[%for (pin_typing in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "type")) { %]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "int")) { %]
				[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		[%=insPh('field.' + p_name.name)%] = readAnalog([%=insPh('field.'+pin_id.name)%]);
								[%}%]
				[%=insEnd()%]
							[%}%]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "bool")) { %]
				[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		[%=insPh('field.' + p_name.name)%] = readDigital([%=insPh('field.'+pin_id.name)%]);
								[%}%]
				[%=insEnd()%]
							[%}%]
						[%}%]	
					[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
				[%}%]
			[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "parallel")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
						[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('i', 'Sequence{0..port.' + pin.name + '.size() -1}')%]
							[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		[%=insPh('port.' + port_name.name)%][[%=insPh('i')%]] = readDigital([%=insPh('port.'+pin.name+'.at(i).'+pin_id.name)%]);
							[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
						[%}%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "proto")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
						[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		[%=insPh('port.' + port_name.name)%]->read();
						[%}%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
		[%}%]
	}

};	
	[%}%]
[%=insEnd()%]
[%}%]

[*-Writing Adapters*]
[%for (mc in EClass.all.getWanted(_source, "out_adapter")) {%]
[%=insMarker('Adapter for ' + mc.name)%]
[%=insFor('c', mc.name)%]

	[%for (mc_name in mc.getAllAttributes().getWanted(_source, "naming")) { %]
/* Writing Adapter - [%=insPh('c.' + mc_name.name)%] */
class [%=insPh('c.' + mc_name.name)%]Adapter {
	public:
		[*-Fields*]
		[%=insMarker('Fields')%]
		[%for (coding in mc.getAllAttributes().getWanted(_source, "coding")) { %]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "raw")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('field', 'port.'+pin.name)%]
						[%for (pin_typing in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "type")) { %]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "int")) { %]
					[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		int [%=insPh('field.' + p_name.name)%];
								[%}%]
					[%=insEnd()%]
							[%}%]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "bool")) { %]
					[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		bool [%=insPh('field.' + p_name.name)%];
								[%}%]
					[%=insEnd()%]
							[%}%]
						[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "parallel")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
						[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		bool [%=insPh('port.' + port_name.name)%][[%=insPh('port.' + pin.name + '.size()')%]];
						[%}%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "proto")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]				
			[%=insFor('port', 'c.' + port.name)%]
		[%=c_type.getExtraInfo("proto")%]* [%=insPh('port.' + port_name.name)%];
						[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
				[%=insFor('pin', 'port.' + pin.name)%]
							[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]							
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		const int [%=insPh('port.' + port_name.name)%]_[%=insPh('pin.' + p_name.name)%] = [%=insPh('pin.' + pin_id.name)%];
								[%}%]
							[%}%]
						[%}%]
				[%=insEnd()%]
					[%}%]
			[%=insEnd()%]
				[%}%]
		[%=insEnd()%]
			[%}%]
		[%}%]
		
	void run() {
		[*-Writing*]
		[%=insMarker('Writing')%]
		[%for (coding in mc.getAllAttributes().getWanted(_source, "coding")) { %]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "raw")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
			[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
				[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('field', 'port.'+pin.name)%]
					[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]
						[%for (pin_typing in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "type")) { %]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "int")) { %]
				[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		writeAnalog([%=insPh('field.'+pin_id.name)%], [%=insPh('field.' + p_name.name)%]);
								[%}%]
				[%=insEnd()%]
							[%}%]
							[%for (p_type in pin_typing.eType.eLiterals.getWanted(_source, "bool")) { %]
				[%=insIf('field.' + pin_typing.name + '.literal == ' + insStr(p_type.literal))%]
								[%for (p_name in pin.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		writeDigital([%=insPh('field.'+pin_id.name)%], [%=insPh('field.' + p_name.name)%]);
								[%}%]
				[%=insEnd()%]
							[%}%]
						[%}%]	
					[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
				[%}%]
			[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "parallel")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
						[%for (pin_id in pin.getAllSubTypes().getAllAttributesFromAll().getWanted(_source, "number")) { %]
			[%=insFor('port', 'c.'+port.name)%]
				[%=insFor('i', 'Sequence{0..port.' + pin.name + '.size() -1}')%]
							[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		writeDigital([%=insPh('port.'+pin.name+'.at(i).'+pin_id.name)%], [%=insPh('port.' + port_name.name)%][[%=insPh('i')%]]);
							[%}%]
				[%=insEnd()%]
			[%=insEnd()%]
						[%}%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
			[%for (c_type in coding.eType.eLiterals.getWanted(_source, "proto")) { %]
		[%=insIf('c.' + coding.name + '.literal == ' + insStr(c_type.literal))%]
				[%for (port in mc.getAllReferences().getWanted(_source, "port")) { %]
					[%for (pin in port.eType.getEReferences().getWanted(_source, "pin")) { %]
			[%=insFor('port', 'c.'+port.name)%]
						[%for (port_name in port.eType.getAllAttributes().getWanted(_source, "naming")) { %]
		[%=insPh('port.' + port_name.name)%]->write();
						[%}%]
			[%=insEnd()%]
					[%}%]
				[%}%]
		[%=insEnd()%]
			[%}%]
		[%}%]
	}

};
	[%}%]
[%=insEnd()%]
[%}%]