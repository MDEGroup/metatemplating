/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.metaTemplating.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.metaTemplating.Escaped;
import org.xtext.example.mydsl.metaTemplating.EscapedString;
import org.xtext.example.mydsl.metaTemplating.Inject;
import org.xtext.example.mydsl.metaTemplating.MetaInject;
import org.xtext.example.mydsl.metaTemplating.MetaPh;
import org.xtext.example.mydsl.metaTemplating.MetaTemplatingPackage;
import org.xtext.example.mydsl.metaTemplating.Ph;
import org.xtext.example.mydsl.metaTemplating.Statement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getText <em>Text</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getChar <em>Char</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getString <em>String</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getInject <em>Inject</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getMetaInject <em>Meta Inject</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getPlaceholder <em>Placeholder</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.StatementImpl#getMetaPlaceholder <em>Meta Placeholder</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StatementImpl extends MinimalEObjectImpl.Container implements Statement
{
  /**
   * The default value of the '{@link #getText() <em>Text</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getText()
   * @generated
   * @ordered
   */
  protected static final String TEXT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getText() <em>Text</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getText()
   * @generated
   * @ordered
   */
  protected String text = TEXT_EDEFAULT;

  /**
   * The cached value of the '{@link #getChar() <em>Char</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChar()
   * @generated
   * @ordered
   */
  protected Escaped char_;

  /**
   * The cached value of the '{@link #getString() <em>String</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getString()
   * @generated
   * @ordered
   */
  protected EscapedString string;

  /**
   * The cached value of the '{@link #getInject() <em>Inject</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInject()
   * @generated
   * @ordered
   */
  protected Inject inject;

  /**
   * The cached value of the '{@link #getMetaInject() <em>Meta Inject</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetaInject()
   * @generated
   * @ordered
   */
  protected MetaInject metaInject;

  /**
   * The cached value of the '{@link #getPlaceholder() <em>Placeholder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPlaceholder()
   * @generated
   * @ordered
   */
  protected Ph placeholder;

  /**
   * The cached value of the '{@link #getMetaPlaceholder() <em>Meta Placeholder</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetaPlaceholder()
   * @generated
   * @ordered
   */
  protected MetaPh metaPlaceholder;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaTemplatingPackage.Literals.STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getText()
  {
    return text;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setText(String newText)
  {
    String oldText = text;
    text = newText;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__TEXT, oldText, text));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Escaped getChar()
  {
    return char_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetChar(Escaped newChar, NotificationChain msgs)
  {
    Escaped oldChar = char_;
    char_ = newChar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__CHAR, oldChar, newChar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setChar(Escaped newChar)
  {
    if (newChar != char_)
    {
      NotificationChain msgs = null;
      if (char_ != null)
        msgs = ((InternalEObject)char_).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__CHAR, null, msgs);
      if (newChar != null)
        msgs = ((InternalEObject)newChar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__CHAR, null, msgs);
      msgs = basicSetChar(newChar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__CHAR, newChar, newChar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EscapedString getString()
  {
    return string;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetString(EscapedString newString, NotificationChain msgs)
  {
    EscapedString oldString = string;
    string = newString;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__STRING, oldString, newString);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setString(EscapedString newString)
  {
    if (newString != string)
    {
      NotificationChain msgs = null;
      if (string != null)
        msgs = ((InternalEObject)string).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__STRING, null, msgs);
      if (newString != null)
        msgs = ((InternalEObject)newString).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__STRING, null, msgs);
      msgs = basicSetString(newString, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__STRING, newString, newString));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Inject getInject()
  {
    return inject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInject(Inject newInject, NotificationChain msgs)
  {
    Inject oldInject = inject;
    inject = newInject;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__INJECT, oldInject, newInject);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInject(Inject newInject)
  {
    if (newInject != inject)
    {
      NotificationChain msgs = null;
      if (inject != null)
        msgs = ((InternalEObject)inject).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__INJECT, null, msgs);
      if (newInject != null)
        msgs = ((InternalEObject)newInject).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__INJECT, null, msgs);
      msgs = basicSetInject(newInject, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__INJECT, newInject, newInject));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MetaInject getMetaInject()
  {
    return metaInject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetaInject(MetaInject newMetaInject, NotificationChain msgs)
  {
    MetaInject oldMetaInject = metaInject;
    metaInject = newMetaInject;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__META_INJECT, oldMetaInject, newMetaInject);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetaInject(MetaInject newMetaInject)
  {
    if (newMetaInject != metaInject)
    {
      NotificationChain msgs = null;
      if (metaInject != null)
        msgs = ((InternalEObject)metaInject).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__META_INJECT, null, msgs);
      if (newMetaInject != null)
        msgs = ((InternalEObject)newMetaInject).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__META_INJECT, null, msgs);
      msgs = basicSetMetaInject(newMetaInject, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__META_INJECT, newMetaInject, newMetaInject));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Ph getPlaceholder()
  {
    return placeholder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPlaceholder(Ph newPlaceholder, NotificationChain msgs)
  {
    Ph oldPlaceholder = placeholder;
    placeholder = newPlaceholder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__PLACEHOLDER, oldPlaceholder, newPlaceholder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPlaceholder(Ph newPlaceholder)
  {
    if (newPlaceholder != placeholder)
    {
      NotificationChain msgs = null;
      if (placeholder != null)
        msgs = ((InternalEObject)placeholder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__PLACEHOLDER, null, msgs);
      if (newPlaceholder != null)
        msgs = ((InternalEObject)newPlaceholder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__PLACEHOLDER, null, msgs);
      msgs = basicSetPlaceholder(newPlaceholder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__PLACEHOLDER, newPlaceholder, newPlaceholder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MetaPh getMetaPlaceholder()
  {
    return metaPlaceholder;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetaPlaceholder(MetaPh newMetaPlaceholder, NotificationChain msgs)
  {
    MetaPh oldMetaPlaceholder = metaPlaceholder;
    metaPlaceholder = newMetaPlaceholder;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER, oldMetaPlaceholder, newMetaPlaceholder);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetaPlaceholder(MetaPh newMetaPlaceholder)
  {
    if (newMetaPlaceholder != metaPlaceholder)
    {
      NotificationChain msgs = null;
      if (metaPlaceholder != null)
        msgs = ((InternalEObject)metaPlaceholder).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER, null, msgs);
      if (newMetaPlaceholder != null)
        msgs = ((InternalEObject)newMetaPlaceholder).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER, null, msgs);
      msgs = basicSetMetaPlaceholder(newMetaPlaceholder, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER, newMetaPlaceholder, newMetaPlaceholder));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.STATEMENT__CHAR:
        return basicSetChar(null, msgs);
      case MetaTemplatingPackage.STATEMENT__STRING:
        return basicSetString(null, msgs);
      case MetaTemplatingPackage.STATEMENT__INJECT:
        return basicSetInject(null, msgs);
      case MetaTemplatingPackage.STATEMENT__META_INJECT:
        return basicSetMetaInject(null, msgs);
      case MetaTemplatingPackage.STATEMENT__PLACEHOLDER:
        return basicSetPlaceholder(null, msgs);
      case MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER:
        return basicSetMetaPlaceholder(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.STATEMENT__TEXT:
        return getText();
      case MetaTemplatingPackage.STATEMENT__CHAR:
        return getChar();
      case MetaTemplatingPackage.STATEMENT__STRING:
        return getString();
      case MetaTemplatingPackage.STATEMENT__INJECT:
        return getInject();
      case MetaTemplatingPackage.STATEMENT__META_INJECT:
        return getMetaInject();
      case MetaTemplatingPackage.STATEMENT__PLACEHOLDER:
        return getPlaceholder();
      case MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER:
        return getMetaPlaceholder();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.STATEMENT__TEXT:
        setText((String)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__CHAR:
        setChar((Escaped)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__STRING:
        setString((EscapedString)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__INJECT:
        setInject((Inject)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__META_INJECT:
        setMetaInject((MetaInject)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__PLACEHOLDER:
        setPlaceholder((Ph)newValue);
        return;
      case MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER:
        setMetaPlaceholder((MetaPh)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.STATEMENT__TEXT:
        setText(TEXT_EDEFAULT);
        return;
      case MetaTemplatingPackage.STATEMENT__CHAR:
        setChar((Escaped)null);
        return;
      case MetaTemplatingPackage.STATEMENT__STRING:
        setString((EscapedString)null);
        return;
      case MetaTemplatingPackage.STATEMENT__INJECT:
        setInject((Inject)null);
        return;
      case MetaTemplatingPackage.STATEMENT__META_INJECT:
        setMetaInject((MetaInject)null);
        return;
      case MetaTemplatingPackage.STATEMENT__PLACEHOLDER:
        setPlaceholder((Ph)null);
        return;
      case MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER:
        setMetaPlaceholder((MetaPh)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.STATEMENT__TEXT:
        return TEXT_EDEFAULT == null ? text != null : !TEXT_EDEFAULT.equals(text);
      case MetaTemplatingPackage.STATEMENT__CHAR:
        return char_ != null;
      case MetaTemplatingPackage.STATEMENT__STRING:
        return string != null;
      case MetaTemplatingPackage.STATEMENT__INJECT:
        return inject != null;
      case MetaTemplatingPackage.STATEMENT__META_INJECT:
        return metaInject != null;
      case MetaTemplatingPackage.STATEMENT__PLACEHOLDER:
        return placeholder != null;
      case MetaTemplatingPackage.STATEMENT__META_PLACEHOLDER:
        return metaPlaceholder != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (text: ");
    result.append(text);
    result.append(')');
    return result.toString();
  }

} //StatementImpl
