/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.mydsl.metaTemplating.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.metaTemplating.Instructions;
import org.xtext.example.mydsl.metaTemplating.Iterator;
import org.xtext.example.mydsl.metaTemplating.MetaPh;
import org.xtext.example.mydsl.metaTemplating.MetaTemplatingPackage;
import org.xtext.example.mydsl.metaTemplating.SubProperty;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Iterator</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.IteratorImpl#getElement <em>Element</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.IteratorImpl#getMetaElement <em>Meta Element</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.IteratorImpl#getSubProperties <em>Sub Properties</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.metaTemplating.impl.IteratorImpl#getBody <em>Body</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IteratorImpl extends MinimalEObjectImpl.Container implements Iterator
{
  /**
   * The default value of the '{@link #getElement() <em>Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected static final String ELEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getElement() <em>Element</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElement()
   * @generated
   * @ordered
   */
  protected String element = ELEMENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getMetaElement() <em>Meta Element</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetaElement()
   * @generated
   * @ordered
   */
  protected MetaPh metaElement;

  /**
   * The cached value of the '{@link #getSubProperties() <em>Sub Properties</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubProperties()
   * @generated
   * @ordered
   */
  protected EList<SubProperty> subProperties;

  /**
   * The cached value of the '{@link #getBody() <em>Body</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBody()
   * @generated
   * @ordered
   */
  protected EList<Instructions> body;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IteratorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaTemplatingPackage.Literals.ITERATOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getElement()
  {
    return element;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElement(String newElement)
  {
    String oldElement = element;
    element = newElement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.ITERATOR__ELEMENT, oldElement, element));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MetaPh getMetaElement()
  {
    return metaElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMetaElement(MetaPh newMetaElement, NotificationChain msgs)
  {
    MetaPh oldMetaElement = metaElement;
    metaElement = newMetaElement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.ITERATOR__META_ELEMENT, oldMetaElement, newMetaElement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetaElement(MetaPh newMetaElement)
  {
    if (newMetaElement != metaElement)
    {
      NotificationChain msgs = null;
      if (metaElement != null)
        msgs = ((InternalEObject)metaElement).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.ITERATOR__META_ELEMENT, null, msgs);
      if (newMetaElement != null)
        msgs = ((InternalEObject)newMetaElement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaTemplatingPackage.ITERATOR__META_ELEMENT, null, msgs);
      msgs = basicSetMetaElement(newMetaElement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaTemplatingPackage.ITERATOR__META_ELEMENT, newMetaElement, newMetaElement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SubProperty> getSubProperties()
  {
    if (subProperties == null)
    {
      subProperties = new EObjectContainmentEList<SubProperty>(SubProperty.class, this, MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES);
    }
    return subProperties;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Instructions> getBody()
  {
    if (body == null)
    {
      body = new EObjectContainmentEList<Instructions>(Instructions.class, this, MetaTemplatingPackage.ITERATOR__BODY);
    }
    return body;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.ITERATOR__META_ELEMENT:
        return basicSetMetaElement(null, msgs);
      case MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES:
        return ((InternalEList<?>)getSubProperties()).basicRemove(otherEnd, msgs);
      case MetaTemplatingPackage.ITERATOR__BODY:
        return ((InternalEList<?>)getBody()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.ITERATOR__ELEMENT:
        return getElement();
      case MetaTemplatingPackage.ITERATOR__META_ELEMENT:
        return getMetaElement();
      case MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES:
        return getSubProperties();
      case MetaTemplatingPackage.ITERATOR__BODY:
        return getBody();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.ITERATOR__ELEMENT:
        setElement((String)newValue);
        return;
      case MetaTemplatingPackage.ITERATOR__META_ELEMENT:
        setMetaElement((MetaPh)newValue);
        return;
      case MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES:
        getSubProperties().clear();
        getSubProperties().addAll((Collection<? extends SubProperty>)newValue);
        return;
      case MetaTemplatingPackage.ITERATOR__BODY:
        getBody().clear();
        getBody().addAll((Collection<? extends Instructions>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.ITERATOR__ELEMENT:
        setElement(ELEMENT_EDEFAULT);
        return;
      case MetaTemplatingPackage.ITERATOR__META_ELEMENT:
        setMetaElement((MetaPh)null);
        return;
      case MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES:
        getSubProperties().clear();
        return;
      case MetaTemplatingPackage.ITERATOR__BODY:
        getBody().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaTemplatingPackage.ITERATOR__ELEMENT:
        return ELEMENT_EDEFAULT == null ? element != null : !ELEMENT_EDEFAULT.equals(element);
      case MetaTemplatingPackage.ITERATOR__META_ELEMENT:
        return metaElement != null;
      case MetaTemplatingPackage.ITERATOR__SUB_PROPERTIES:
        return subProperties != null && !subProperties.isEmpty();
      case MetaTemplatingPackage.ITERATOR__BODY:
        return body != null && !body.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (element: ");
    result.append(element);
    result.append(')');
    return result.toString();
  }

} //IteratorImpl
